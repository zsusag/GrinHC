let sum = fix f xs -> if empty xs then  0 else (head xs + f tail xs) in sum 5, 4, 3, 2, 1
fix f xs -> if empty xs then  0 else (head xs + f tail xs) 5, 4, 3, 2, 1
if empty 5, 4, 3, 2, 1 then  0 else (head 5, 4, 3, 2, 1 + fix f xs -> if empty xs then  0 else (head xs + f tail xs) tail 5, 4, 3, 2, 1)
if false then  0 else (head 5, 4, 3, 2, 1 + fix f xs -> if empty xs then  0 else (head xs + f tail xs) tail 5, 4, 3, 2, 1)
if false then  0 else (5 + fix f xs -> if empty xs then  0 else (head xs + f tail xs) tail 5, 4, 3, 2, 1)
if false then  0 else (5 + fix f xs -> if empty xs then  0 else (head xs + f tail xs) 4, 3, 2, 1)
if false then  0 else (5 + if empty 4, 3, 2, 1 then  0 else (head 4, 3, 2, 1 + fix f xs -> if empty xs then  0 else (head xs + f tail xs) tail 4, 3, 2, 1))
if false then  0 else (5 + if false then  0 else (head 4, 3, 2, 1 + fix f xs -> if empty xs then  0 else (head xs + f tail xs) tail 4, 3, 2, 1))
if false then  0 else (5 + if false then  0 else (4 + fix f xs -> if empty xs then  0 else (head xs + f tail xs) tail 4, 3, 2, 1))
if false then  0 else (5 + if false then  0 else (4 + fix f xs -> if empty xs then  0 else (head xs + f tail xs) 3, 2, 1))
if false then  0 else (5 + if false then  0 else (4 + if empty 3, 2, 1 then  0 else (head 3, 2, 1 + fix f xs -> if empty xs then  0 else (head xs + f tail xs) tail 3, 2, 1)))
if false then  0 else (5 + if false then  0 else (4 + if false then  0 else (head 3, 2, 1 + fix f xs -> if empty xs then  0 else (head xs + f tail xs) tail 3, 2, 1)))
if false then  0 else (5 + if false then  0 else (4 + if false then  0 else (3 + fix f xs -> if empty xs then  0 else (head xs + f tail xs) tail 3, 2, 1)))
if false then  0 else (5 + if false then  0 else (4 + if false then  0 else (3 + fix f xs -> if empty xs then  0 else (head xs + f tail xs) 2, 1)))
if false then  0 else (5 + if false then  0 else (4 + if false then  0 else (3 + if empty 2, 1 then  0 else (head 2, 1 + fix f xs -> if empty xs then  0 else (head xs + f tail xs) tail 2, 1))))
if false then  0 else (5 + if false then  0 else (4 + if false then  0 else (3 + if false then  0 else (head 2, 1 + fix f xs -> if empty xs then  0 else (head xs + f tail xs) tail 2, 1))))
if false then  0 else (5 + if false then  0 else (4 + if false then  0 else (3 + if false then  0 else (2 + fix f xs -> if empty xs then  0 else (head xs + f tail xs) tail 2, 1))))
if false then  0 else (5 + if false then  0 else (4 + if false then  0 else (3 + if false then  0 else (2 + fix f xs -> if empty xs then  0 else (head xs + f tail xs) 1))))
if false then  0 else (5 + if false then  0 else (4 + if false then  0 else (3 + if false then  0 else (2 + if empty 1 then  0 else (head 1 + fix f xs -> if empty xs then  0 else (head xs + f tail xs) tail 1)))))
if false then  0 else (5 + if false then  0 else (4 + if false then  0 else (3 + if false then  0 else (2 + if false then  0 else (head 1 + fix f xs -> if empty xs then  0 else (head xs + f tail xs) tail 1)))))
if false then  0 else (5 + if false then  0 else (4 + if false then  0 else (3 + if false then  0 else (2 + if false then  0 else (1 + fix f xs -> if empty xs then  0 else (head xs + f tail xs) tail 1)))))
if false then  0 else (5 + if false then  0 else (4 + if false then  0 else (3 + if false then  0 else (2 + if false then  0 else (1 + fix f xs -> if empty xs then  0 else (head xs + f tail xs) [])))))
if false then  0 else (5 + if false then  0 else (4 + if false then  0 else (3 + if false then  0 else (2 + if false then  0 else (1 + if empty [] then  0 else (head [] + fix f xs -> if empty xs then  0 else (head xs + f tail xs) tail []))))))
if false then  0 else (5 + if false then  0 else (4 + if false then  0 else (3 + if false then  0 else (2 + if false then  0 else (1 + if true then  0 else (head [] + fix f xs -> if empty xs then  0 else (head xs + f tail xs) tail []))))))
if false then  0 else (5 + if false then  0 else (4 + if false then  0 else (3 + if false then  0 else (2 + if false then  0 else (1 + 0)))))
if false then  0 else (5 + if false then  0 else (4 + if false then  0 else (3 + if false then  0 else (2 + if false then  0 else 1))))
if false then  0 else (5 + if false then  0 else (4 + if false then  0 else (3 + if false then  0 else (2 + 1))))
if false then  0 else (5 + if false then  0 else (4 + if false then  0 else (3 + if false then  0 else 3)))
if false then  0 else (5 + if false then  0 else (4 + if false then  0 else (3 + 3)))
if false then  0 else (5 + if false then  0 else (4 + if false then  0 else 6))
if false then  0 else (5 + if false then  0 else (4 + 6))
if false then  0 else (5 + if false then  0 else 10)
if false then  0 else (5 + 10)
if false then  0 else 15
15
